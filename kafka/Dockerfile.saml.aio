# Kafka and Zookeeper
ARG BASE_IMAGE=memsql/kafka_base:latest
FROM $BASE_IMAGE

ARG SCALA_VERSION_ARG=2.12
ENV SCALA_VERSION=$SCALA_VERSION_ARG
ARG KAFKA_VERSION_ARG=2.7.0
ENV KAFKA_VERSION=$KAFKA_VERSION_ARG
ENV KAFKA_HOME /opt/kafka_"$SCALA_VERSION"-"$KAFKA_VERSION"

RUN /scripts/install-kafka.sh

RUN echo package heimdal/realm string EXAMPLE.COM | debconf-set-selections
RUN apt-get -y install heimdal-kdc heimdal-clients
RUN apt-get -y install libsasl2-modules-gssapi-heimdal

EXPOSE  88

# Create keytab folder.
RUN mkdir /etc/docker-kdc

# Add kerberos principal/s.
RUN kadmin -l add --password=herbert --use-defaults memsql/host.example.com@EXAMPLE.COM
RUN kadmin -l add --password=herbert --use-defaults user1@EXAMPLE.COM
RUN kadmin -l add --password=tuna    --use-defaults user2@EXAMPLE.COM
RUN kadmin -l add --password=zookeeper --use-defaults zookeeper/host.example.com@EXAMPLE.COM
RUN kadmin -l add --password=kafka --use-defaults kafka/host.example.com@EXAMPLE.COM
RUN kadmin -l add --password=zookeeper --use-defaults zookeeper/localhost@EXAMPLE.COM
RUN kadmin -l add --password=kafka --use-defaults kafka/localhost@EXAMPLE.COM

# Export keytab.
RUN kadmin -l ext_keytab -k /etc/docker-kdc/krb5.keytab memsql/host.example.com@EXAMPLE.COM user1@EXAMPLE.COM user2@EXAMPLE.COM zookeeper/host.example.com@EXAMPLE.COM kafka/host.example.com@EXAMPLE.COM kafka/localhost@EXAMPLE.COM zookeeper/localhost@EXAMPLE.COM

ENV ZOOKEEPER_SASL 1
ADD config/log4j.properties config/zookeeper.jaas.tmpl config/kafka.jaas.tmpl "$KAFKA_HOME"/config/

# setting up an ssh context 

COPY utils /opt/utils

RUN cp -p /opt/utils/krb5.conf /etc/krb5.conf
RUN cp -p /etc/docker-kdc/krb5.keytab /etc/krb5.keytab

# We need to test for time-skew so bundle/compile libfaketime because Docker can't
# change time from host containers.
RUN git clone https://github.com/wolfcw/libfaketime.git /tmp/libfaketime

# Change to a specific HASH to avoid potential future issues.
RUN cd /tmp/libfaketime && git reset --hard 57b098c98ab746f6eb1ecf9683b0dfc498fdf2bd && make

# HACK: To leverage the non-kerberized kafka startup, we are replacing the supervisord
# managed start-kafka.sh with the custom kerberized version
ADD scripts/start-kafka-with-saml.sh /scripts/start-kafka.sh

# Supervisor config
ADD supervisor/* /etc/supervisor/conf.d/

# 2181 is zookeeper, 9092-9099 is kafka (for different listeners like SSL, INTERNAL, PLAINTEXT etc.)
# 8081 is the schema registry
EXPOSE 2181 9092 9093 9094 9095 9096 9097 9098 9099 8081

CMD ["/scripts/start.sh"]

